"use strict";(self.webpackChunkfit_lead_test_assignment=self.webpackChunkfit_lead_test_assignment||[]).push([[358],{"./stories/ThemeToggle.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllSizes:()=>AllSizes,DarkTheme:()=>DarkTheme,Interactive:()=>Interactive,LargeSize:()=>LargeSize,LightTheme:()=>LightTheme,MediumSize:()=>MediumSize,SmallSize:()=>SmallSize,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),_components_ThemeToggle__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./components/ThemeToggle.tsx"),react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),console=__webpack_require__("./node_modules/console-browserify/index.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/ThemeToggle",component:_components_ThemeToggle__WEBPACK_IMPORTED_MODULE_1__.U,parameters:{layout:"centered",docs:{description:{component:"Theme toggle with sun/moon icons. Two ghost buttons for switching between light and dark themes."}}},tags:["autodocs"],argTypes:{theme:{control:"select",options:["light","dark"],description:"Current theme"},size:{control:"select",options:["sm","md","lg"],description:"Size of toggle buttons"}}},LightTheme={args:{theme:"light",onToggle:theme=>console.log("Theme changed to:",theme)}},DarkTheme={args:{theme:"dark",onToggle:theme=>console.log("Theme changed to:",theme)}},SmallSize={args:{theme:"light",size:"sm",onToggle:theme=>console.log("Theme changed to:",theme)}},MediumSize={args:{theme:"light",size:"md",onToggle:theme=>console.log("Theme changed to:",theme)}},LargeSize={args:{theme:"light",size:"lg",onToggle:theme=>console.log("Theme changed to:",theme)}},Interactive={args:{theme:"light",onToggle:theme=>console.log("Theme changed to:",theme)},render:args=>{const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(args.theme);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"flex flex-col gap-4 items-center",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_ThemeToggle__WEBPACK_IMPORTED_MODULE_1__.U,{theme,onToggle:setTheme}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{className:"text-sm text-[--color-text-secondary]",children:["Current theme: ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("strong",{children:theme})]})]})},parameters:{docs:{description:{story:"Click the buttons to toggle between light and dark themes."}}}},AllSizes={args:{theme:"light",onToggle:theme=>console.log("Theme changed to:",theme)},render:args=>{const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(args.theme);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"flex flex-col gap-6 items-center",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"flex flex-col gap-2 items-center",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_ThemeToggle__WEBPACK_IMPORTED_MODULE_1__.U,{theme,onToggle:setTheme,size:"sm"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{className:"text-xs text-[--color-text-secondary]",children:"Small"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"flex flex-col gap-2 items-center",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_ThemeToggle__WEBPACK_IMPORTED_MODULE_1__.U,{theme,onToggle:setTheme,size:"md"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{className:"text-xs text-[--color-text-secondary]",children:"Medium"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"flex flex-col gap-2 items-center",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_ThemeToggle__WEBPACK_IMPORTED_MODULE_1__.U,{theme,onToggle:setTheme,size:"lg"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{className:"text-xs text-[--color-text-secondary]",children:"Large"})]})]})},parameters:{layout:"padded"}},__namedExportsOrder=["LightTheme","DarkTheme","SmallSize","MediumSize","LargeSize","Interactive","AllSizes"];LightTheme.parameters={...LightTheme.parameters,docs:{...LightTheme.parameters?.docs,source:{originalSource:"{\n  args: {\n    theme: 'light',\n    onToggle: theme => console.log('Theme changed to:', theme)\n  }\n}",...LightTheme.parameters?.docs?.source}}},DarkTheme.parameters={...DarkTheme.parameters,docs:{...DarkTheme.parameters?.docs,source:{originalSource:"{\n  args: {\n    theme: 'dark',\n    onToggle: theme => console.log('Theme changed to:', theme)\n  }\n}",...DarkTheme.parameters?.docs?.source}}},SmallSize.parameters={...SmallSize.parameters,docs:{...SmallSize.parameters?.docs,source:{originalSource:"{\n  args: {\n    theme: 'light',\n    size: 'sm',\n    onToggle: theme => console.log('Theme changed to:', theme)\n  }\n}",...SmallSize.parameters?.docs?.source}}},MediumSize.parameters={...MediumSize.parameters,docs:{...MediumSize.parameters?.docs,source:{originalSource:"{\n  args: {\n    theme: 'light',\n    size: 'md',\n    onToggle: theme => console.log('Theme changed to:', theme)\n  }\n}",...MediumSize.parameters?.docs?.source}}},LargeSize.parameters={...LargeSize.parameters,docs:{...LargeSize.parameters?.docs,source:{originalSource:"{\n  args: {\n    theme: 'light',\n    size: 'lg',\n    onToggle: theme => console.log('Theme changed to:', theme)\n  }\n}",...LargeSize.parameters?.docs?.source}}},Interactive.parameters={...Interactive.parameters,docs:{...Interactive.parameters?.docs,source:{originalSource:"{\n  args: {\n    theme: 'light',\n    onToggle: theme => console.log('Theme changed to:', theme)\n  },\n  render: args => {\n    const [theme, setTheme] = useState<'light' | 'dark'>(args.theme);\n    return <div className=\"flex flex-col gap-4 items-center\">\r\n        <ThemeToggle theme={theme} onToggle={setTheme} />\r\n        <p className=\"text-sm text-[--color-text-secondary]\">\r\n          Current theme: <strong>{theme}</strong>\r\n        </p>\r\n      </div>;\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Click the buttons to toggle between light and dark themes.'\n      }\n    }\n  }\n}",...Interactive.parameters?.docs?.source}}},AllSizes.parameters={...AllSizes.parameters,docs:{...AllSizes.parameters?.docs,source:{originalSource:'{\n  args: {\n    theme: \'light\',\n    onToggle: theme => console.log(\'Theme changed to:\', theme)\n  },\n  render: args => {\n    const [theme, setTheme] = useState<\'light\' | \'dark\'>(args.theme);\n    return <div className="flex flex-col gap-6 items-center">\r\n        <div className="flex flex-col gap-2 items-center">\r\n          <ThemeToggle theme={theme} onToggle={setTheme} size="sm" />\r\n          <span className="text-xs text-[--color-text-secondary]">Small</span>\r\n        </div>\r\n        <div className="flex flex-col gap-2 items-center">\r\n          <ThemeToggle theme={theme} onToggle={setTheme} size="md" />\r\n          <span className="text-xs text-[--color-text-secondary]">Medium</span>\r\n        </div>\r\n        <div className="flex flex-col gap-2 items-center">\r\n          <ThemeToggle theme={theme} onToggle={setTheme} size="lg" />\r\n          <span className="text-xs text-[--color-text-secondary]">Large</span>\r\n        </div>\r\n      </div>;\n  },\n  parameters: {\n    layout: \'padded\'\n  }\n}',...AllSizes.parameters?.docs?.source}}}}}]);