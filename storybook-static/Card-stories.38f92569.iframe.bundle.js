/*! For license information please see Card-stories.38f92569.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkfit_lead_test_assignment=self.webpackChunkfit_lead_test_assignment||[]).push([[633],{"./node_modules/lucide-react/dist/esm/createLucideIcon.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>createLucideIcon});var react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");const toPascalCase=string=>{const camelCase=(string=>string.replace(/^([A-Z])|[\s-_]+(\w)/g,(match,p1,p2)=>p2?p2.toUpperCase():p1.toLowerCase()))(string);return camelCase.charAt(0).toUpperCase()+camelCase.slice(1)},mergeClasses=(...classes)=>classes.filter((className,index,array)=>Boolean(className)&&""!==className.trim()&&array.indexOf(className)===index).join(" ").trim(),hasA11yProp=props=>{for(const prop in props)if(prop.startsWith("aria-")||"role"===prop||"title"===prop)return!0};var defaultAttributes={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};const Icon=(0,react.forwardRef)(({color="currentColor",size=24,strokeWidth=2,absoluteStrokeWidth,className="",children,iconNode,...rest},ref)=>(0,react.createElement)("svg",{ref,...defaultAttributes,width:size,height:size,stroke:color,strokeWidth:absoluteStrokeWidth?24*Number(strokeWidth)/Number(size):strokeWidth,className:mergeClasses("lucide",className),...!children&&!hasA11yProp(rest)&&{"aria-hidden":"true"},...rest},[...iconNode.map(([tag,attrs])=>(0,react.createElement)(tag,attrs)),...Array.isArray(children)?children:[children]])),createLucideIcon=(iconName,iconNode)=>{const Component=(0,react.forwardRef)(({className,...props},ref)=>{return(0,react.createElement)(Icon,{ref,iconNode,className:mergeClasses(`lucide-${string=toPascalCase(iconName),string.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase()}`,`lucide-${iconName}`,className),...props});var string});return Component.displayName=toPascalCase(iconName),Component}},"./stories/Card.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllVariants:()=>AllVariants,BenefitsGrid:()=>BenefitsGrid,ClickableWithHref:()=>ClickableWithHref,ClickableWithOnClick:()=>ClickableWithOnClick,Default:()=>Default,DefaultWithoutIcon:()=>DefaultWithoutIcon,Elevated:()=>Elevated,ElevatedHover:()=>ElevatedHover,LongContent:()=>LongContent,Outlined:()=>Outlined,OutlinedWithoutIcon:()=>OutlinedWithoutIcon,ShortContent:()=>ShortContent,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Card_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),next_link=__webpack_require__("./node_modules/next/link.js"),link_default=__webpack_require__.n(next_link);const Card=react.forwardRef(({icon,title,description,variant="default",href,onClick,className="",headingLevel="h3"},ref)=>{const baseStyles=["flex","flex-col","gap-[var(--spacing-6)]","p-[var(--spacing-8)]","rounded-3xl","transition-all","duration-200","min-w-[17.5rem]","w-full"].join(" "),variantStyles={default:["bg-[var(--color-background)]","border","border-transparent"].join(" "),elevated:["bg-[var(--color-background)]","shadow-[var(--shadow-md)]","hover:shadow-[var(--shadow-lg)]"].join(" "),outlined:["bg-transparent","border","border-[var(--color-border)]","hover:border-[var(--color-primary)]"].join(" ")},interactiveStyles=href||onClick?["cursor-pointer","hover:scale-[1.02]","focus-visible:outline-none","focus-visible:ring-2","focus-visible:ring-[var(--color-focus)]","focus-visible:ring-offset-2","active:scale-[0.98]"].join(" "):"",cardClasses=[baseStyles,variantStyles[variant],interactiveStyles,className].filter(Boolean).join(" "),HeadingTag=headingLevel,cardContent=(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[icon&&(0,jsx_runtime.jsx)("div",{className:"flex-shrink-0","aria-hidden":"true",children:icon}),(0,jsx_runtime.jsxs)("div",{className:"flex-1 space-y-2",children:[(0,jsx_runtime.jsx)(HeadingTag,{className:"text-xl font-semibold text-[var(--color-text-primary)]",children:title}),(0,jsx_runtime.jsx)("p",{className:"text-base text-[var(--color-text-secondary)] leading-relaxed",children:description})]})]});return href?(0,jsx_runtime.jsx)(link_default(),{href,className:cardClasses,children:cardContent}):onClick?(0,jsx_runtime.jsx)("button",{type:"button",onClick,className:cardClasses,ref,children:cardContent}):(0,jsx_runtime.jsx)("div",{className:cardClasses,ref,children:cardContent})});Card.displayName="Card";Card.__docgenInfo={description:'Card Component\n\nReusable content card for benefits, features, and content grids.\nImplements CONTRACT-CARD-001 requirements.\n\n@example\n```tsx\n<Card \n  icon={<Icon />}\n  title="Feature Title"\n  description="Feature description text"\n  variant="elevated"\n/>\n```',methods:[],displayName:"Card",props:{icon:{required:!1,tsType:{name:"ReactNode"},description:"Icon element displayed at top of card\nCan be SVG, image, emoji, or any ReactNode"},title:{required:!0,tsType:{name:"string"},description:"Card heading text"},description:{required:!0,tsType:{name:"string"},description:"Card body text / description"},variant:{required:!1,tsType:{name:"union",raw:"'default' | 'elevated' | 'outlined'",elements:[{name:"literal",value:"'default'"},{name:"literal",value:"'elevated'"},{name:"literal",value:"'outlined'"}]},description:'Visual variant\n- default: subtle background\n- elevated: shadow effect\n- outlined: border style\n@default "default"',defaultValue:{value:"'default'",computed:!1}},href:{required:!1,tsType:{name:"string"},description:"If provided, card becomes clickable link\nUses Next.js Link component"},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Click handler if card is interactive button"},headingLevel:{required:!1,tsType:{name:"union",raw:"'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'",elements:[{name:"literal",value:"'h1'"},{name:"literal",value:"'h2'"},{name:"literal",value:"'h3'"},{name:"literal",value:"'h4'"},{name:"literal",value:"'h5'"},{name:"literal",value:"'h6'"}]},description:'Heading level for title\nAllows proper semantic hierarchy\n@default "h3"',defaultValue:{value:"'h3'",computed:!1}},className:{defaultValue:{value:"''",computed:!1},required:!1}},composes:["Omit"]};var createLucideIcon=__webpack_require__("./node_modules/lucide-react/dist/esm/createLucideIcon.js");const TrendingUp=(0,createLucideIcon.A)("trending-up",[["path",{d:"M16 7h6v6",key:"box55l"}],["path",{d:"m22 7-8.5 8.5-5-5L2 17",key:"1t1m79"}]]),Headphones=(0,createLucideIcon.A)("headphones",[["path",{d:"M3 14h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-7a9 9 0 0 1 18 0v7a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3",key:"1xhozi"}]]),Zap=(0,createLucideIcon.A)("zap",[["path",{d:"M4 14a1 1 0 0 1-.78-1.63l9.9-10.2a.5.5 0 0 1 .86.46l-1.92 6.02A1 1 0 0 0 13 10h7a1 1 0 0 1 .78 1.63l-9.9 10.2a.5.5 0 0 1-.86-.46l1.92-6.02A1 1 0 0 0 11 14z",key:"1xq2db"}]]),ChartColumn=(0,createLucideIcon.A)("chart-column",[["path",{d:"M3 3v16a2 2 0 0 0 2 2h16",key:"c24i48"}],["path",{d:"M18 17V9",key:"2bz60n"}],["path",{d:"M13 17V5",key:"1frdt8"}],["path",{d:"M8 17v-3",key:"17ska0"}]]),Card_stories={title:"Components/Card",component:Card,parameters:{layout:"centered",docs:{description:{component:"Reusable content card component with 3 variants. Used in Benefits section (Landing) and UI Kit page. Supports icons, semantic heading levels, and interactive states (clickable, linkable). Features highly rounded corners (2rem) and no max-width for flexible layouts."}}},tags:["autodocs"],argTypes:{variant:{control:"select",options:["default","elevated","outlined"],description:"Visual variant"},icon:{control:!1,description:"Icon element (SVG, image, emoji)"},headingLevel:{control:"select",options:["h1","h2","h3","h4","h5","h6"],description:"Semantic heading level"}},decorators:[Story=>(0,jsx_runtime.jsx)("div",{className:"w-[400px]",children:(0,jsx_runtime.jsx)(Story,{})})]},Default={args:{variant:"default",icon:(0,jsx_runtime.jsx)(TrendingUp,{size:48,className:"text-primary"}),title:"Default Card",description:"This is a default card with subtle background. Perfect for content grids and feature showcases."}},DefaultWithoutIcon={args:{variant:"default",title:"Card Without Icon",description:"Cards can work without icons, focusing on text content."}},Elevated={args:{variant:"elevated",icon:(0,jsx_runtime.jsx)(Headphones,{size:48,className:"text-primary"}),title:"Elevated Card",description:"Elevated card with shadow effect. Provides more visual prominence and depth."}},ElevatedHover={args:{variant:"elevated",icon:(0,jsx_runtime.jsx)(Zap,{size:48,className:"text-primary"}),title:"Hover Me",description:"Elevated cards have enhanced shadow on hover for better interactivity."},parameters:{docs:{description:{story:"Hover over this card to see the shadow transition effect."}}}},Outlined={args:{variant:"outlined",icon:(0,jsx_runtime.jsx)(ChartColumn,{size:48,className:"text-primary"}),title:"Outlined Card",description:"Outlined card with border. Minimal style that works well on colored backgrounds."}},OutlinedWithoutIcon={args:{variant:"outlined",title:"Minimal Outlined",description:"Clean, minimal card with just border and text."}},ClickableWithHref={args:{variant:"elevated",icon:(0,jsx_runtime.jsx)(Headphones,{size:48,className:"text-primary"}),title:"Clickable Card (Link)",description:"This card is a link. Click to navigate (href prop).",href:"#"},parameters:{docs:{description:{story:"Card with href prop becomes a Next.js Link with hover effects."}}}},ClickableWithOnClick={args:{variant:"default",icon:(0,jsx_runtime.jsx)(Zap,{size:48,className:"text-primary"}),title:"Clickable Card (Button)",description:"This card is a button. Click to trigger action.",onClick:()=>alert("Card clicked!")},parameters:{docs:{description:{story:"Card with onClick prop becomes a button element."}}}},LongContent={args:{variant:"default",icon:(0,jsx_runtime.jsx)(ChartColumn,{size:48,className:"text-primary"}),title:"Card with Longer Content",description:"This card demonstrates how the component handles longer text content. The description can span multiple lines and the card will adjust its height accordingly. This ensures content is always readable and properly formatted."}},ShortContent={args:{variant:"elevated",icon:(0,jsx_runtime.jsx)(Headphones,{size:48,className:"text-primary"}),title:"Brief",description:"Short and sweet."}},AllVariants={args:{variant:"default",title:"Sample Card",description:"This story shows all variants"},render:()=>(0,jsx_runtime.jsxs)("div",{className:"grid grid-cols-1 md:grid-cols-3 gap-6 w-full max-w-6xl",children:[(0,jsx_runtime.jsx)(Card,{variant:"default",icon:(0,jsx_runtime.jsx)(ChartColumn,{size:48,className:"text-primary"}),title:"Default",description:"Subtle background for content grids"}),(0,jsx_runtime.jsx)(Card,{variant:"elevated",icon:(0,jsx_runtime.jsx)(Headphones,{size:48,className:"text-primary"}),title:"Elevated",description:"Shadow effect for prominence"}),(0,jsx_runtime.jsx)(Card,{variant:"outlined",icon:(0,jsx_runtime.jsx)(Zap,{size:48,className:"text-primary"}),title:"Outlined",description:"Border style for minimal look"})]}),parameters:{layout:"padded"}},BenefitsGrid={args:{variant:"default",title:"Benefits Example",description:"Grid layout for benefits section"},render:()=>(0,jsx_runtime.jsxs)("div",{className:"grid grid-cols-1 md:grid-cols-3 gap-6 w-full max-w-6xl",children:[(0,jsx_runtime.jsx)(Card,{variant:"default",icon:(0,jsx_runtime.jsx)(Headphones,{size:48,className:"text-primary"}),title:"Health & Wellness",description:"Professional guidance for your fitness journey with personalized training plans."}),(0,jsx_runtime.jsx)(Card,{variant:"default",icon:(0,jsx_runtime.jsx)(Zap,{size:48,className:"text-primary"}),title:"Expert Trainers",description:"Work with certified professionals who understand your goals and limitations."}),(0,jsx_runtime.jsx)(Card,{variant:"default",icon:(0,jsx_runtime.jsx)(ChartColumn,{size:48,className:"text-primary"}),title:"Flexible Schedule",description:"Train at your own pace with 24/7 access to our platform and resources."})]}),parameters:{layout:"padded",docs:{description:{story:"Example of how cards are used in benefits/features sections."}}}},__namedExportsOrder=["Default","DefaultWithoutIcon","Elevated","ElevatedHover","Outlined","OutlinedWithoutIcon","ClickableWithHref","ClickableWithOnClick","LongContent","ShortContent","AllVariants","BenefitsGrid"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    variant: 'default',\n    icon: <TrendingUpIcon size={48} className=\"text-primary\" />,\n    title: 'Default Card',\n    description: 'This is a default card with subtle background. Perfect for content grids and feature showcases.'\n  }\n}",...Default.parameters?.docs?.source}}},DefaultWithoutIcon.parameters={...DefaultWithoutIcon.parameters,docs:{...DefaultWithoutIcon.parameters?.docs,source:{originalSource:"{\n  args: {\n    variant: 'default',\n    title: 'Card Without Icon',\n    description: 'Cards can work without icons, focusing on text content.'\n  }\n}",...DefaultWithoutIcon.parameters?.docs?.source}}},Elevated.parameters={...Elevated.parameters,docs:{...Elevated.parameters?.docs,source:{originalSource:"{\n  args: {\n    variant: 'elevated',\n    icon: <HeadphonesIcon size={48} className=\"text-primary\" />,\n    title: 'Elevated Card',\n    description: 'Elevated card with shadow effect. Provides more visual prominence and depth.'\n  }\n}",...Elevated.parameters?.docs?.source}}},ElevatedHover.parameters={...ElevatedHover.parameters,docs:{...ElevatedHover.parameters?.docs,source:{originalSource:"{\n  args: {\n    variant: 'elevated',\n    icon: <ZapIcon size={48} className=\"text-primary\" />,\n    title: 'Hover Me',\n    description: 'Elevated cards have enhanced shadow on hover for better interactivity.'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Hover over this card to see the shadow transition effect.'\n      }\n    }\n  }\n}",...ElevatedHover.parameters?.docs?.source}}},Outlined.parameters={...Outlined.parameters,docs:{...Outlined.parameters?.docs,source:{originalSource:"{\n  args: {\n    variant: 'outlined',\n    icon: <BarChart3Icon size={48} className=\"text-primary\" />,\n    title: 'Outlined Card',\n    description: 'Outlined card with border. Minimal style that works well on colored backgrounds.'\n  }\n}",...Outlined.parameters?.docs?.source}}},OutlinedWithoutIcon.parameters={...OutlinedWithoutIcon.parameters,docs:{...OutlinedWithoutIcon.parameters?.docs,source:{originalSource:"{\n  args: {\n    variant: 'outlined',\n    title: 'Minimal Outlined',\n    description: 'Clean, minimal card with just border and text.'\n  }\n}",...OutlinedWithoutIcon.parameters?.docs?.source}}},ClickableWithHref.parameters={...ClickableWithHref.parameters,docs:{...ClickableWithHref.parameters?.docs,source:{originalSource:"{\n  args: {\n    variant: 'elevated',\n    icon: <HeadphonesIcon size={48} className=\"text-primary\" />,\n    title: 'Clickable Card (Link)',\n    description: 'This card is a link. Click to navigate (href prop).',\n    href: '#'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Card with href prop becomes a Next.js Link with hover effects.'\n      }\n    }\n  }\n}",...ClickableWithHref.parameters?.docs?.source}}},ClickableWithOnClick.parameters={...ClickableWithOnClick.parameters,docs:{...ClickableWithOnClick.parameters?.docs,source:{originalSource:"{\n  args: {\n    variant: 'default',\n    icon: <ZapIcon size={48} className=\"text-primary\" />,\n    title: 'Clickable Card (Button)',\n    description: 'This card is a button. Click to trigger action.',\n    onClick: () => alert('Card clicked!')\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Card with onClick prop becomes a button element.'\n      }\n    }\n  }\n}",...ClickableWithOnClick.parameters?.docs?.source}}},LongContent.parameters={...LongContent.parameters,docs:{...LongContent.parameters?.docs,source:{originalSource:"{\n  args: {\n    variant: 'default',\n    icon: <BarChart3Icon size={48} className=\"text-primary\" />,\n    title: 'Card with Longer Content',\n    description: 'This card demonstrates how the component handles longer text content. The description can span multiple lines and the card will adjust its height accordingly. This ensures content is always readable and properly formatted.'\n  }\n}",...LongContent.parameters?.docs?.source}}},ShortContent.parameters={...ShortContent.parameters,docs:{...ShortContent.parameters?.docs,source:{originalSource:"{\n  args: {\n    variant: 'elevated',\n    icon: <HeadphonesIcon size={48} className=\"text-primary\" />,\n    title: 'Brief',\n    description: 'Short and sweet.'\n  }\n}",...ShortContent.parameters?.docs?.source}}},AllVariants.parameters={...AllVariants.parameters,docs:{...AllVariants.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: \'default\',\n    title: \'Sample Card\',\n    description: \'This story shows all variants\'\n  },\n  render: () => <div className="grid grid-cols-1 md:grid-cols-3 gap-6 w-full max-w-6xl">\r\n      <Card variant="default" icon={<BarChart3Icon size={48} className="text-primary" />} title="Default" description="Subtle background for content grids" />\r\n      <Card variant="elevated" icon={<HeadphonesIcon size={48} className="text-primary" />} title="Elevated" description="Shadow effect for prominence" />\r\n      <Card variant="outlined" icon={<ZapIcon size={48} className="text-primary" />} title="Outlined" description="Border style for minimal look" />\r\n    </div>,\n  parameters: {\n    layout: \'padded\'\n  }\n}',...AllVariants.parameters?.docs?.source}}},BenefitsGrid.parameters={...BenefitsGrid.parameters,docs:{...BenefitsGrid.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: \'default\',\n    title: \'Benefits Example\',\n    description: \'Grid layout for benefits section\'\n  },\n  render: () => <div className="grid grid-cols-1 md:grid-cols-3 gap-6 w-full max-w-6xl">\r\n      <Card variant="default" icon={<HeadphonesIcon size={48} className="text-primary" />} title="Health & Wellness" description="Professional guidance for your fitness journey with personalized training plans." />\r\n      <Card variant="default" icon={<ZapIcon size={48} className="text-primary" />} title="Expert Trainers" description="Work with certified professionals who understand your goals and limitations." />\r\n      <Card variant="default" icon={<BarChart3Icon size={48} className="text-primary" />} title="Flexible Schedule" description="Train at your own pace with 24/7 access to our platform and resources." />\r\n    </div>,\n  parameters: {\n    layout: \'padded\',\n    docs: {\n      description: {\n        story: \'Example of how cards are used in benefits/features sections.\'\n      }\n    }\n  }\n}',...BenefitsGrid.parameters?.docs?.source}}}}}]);